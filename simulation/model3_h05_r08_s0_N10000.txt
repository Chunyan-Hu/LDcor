
initialize() {

        // Generate random genes along approximately 1Mb
        defineConstant("L", 1e6);

        // one recombination rate
        initializeRecombinationRate(1e-08);

        // one mutation rate
        initializeMutationRate(1.5e-8);

        // one genomic element
        initializeMutationType('m1', 0.5, 'f', 0);
        initializeGenomicElementType('g1', c(m1), c(1.0));
	initializeGenomicElement(g1, 0, L-1);
}

// Create the ancestral African population
1 { sim.addSubpop('p1', 7310);
}

// Expand the African population to 14474
// This occurs 148000 years (5920) generations ago
52080 { p1.setSubpopulationSize(14474);}

// Split non-Africans from Africans and set up migration between them
// This occurs 51000 years (2040 generations) ago
55960 {
  sim.addSubpopSplit('p2', 1861, p1);
  p1.setMigrationRates(c(p2), c(0));
  p2.setMigrationRates(c(p1), c(0));
}
// Split p2 into European and East Asian subpopulations
// This occurs 23000 years (920 generations) ago
57080 {
  sim.addSubpopSplit('p3', 554, p2);
  p2.setSubpopulationSize(1032); // reduce European size
  // Set migration rates for the rest of the simulation
  p1.setMigrationRates(c(p2, p3), c(0, 0));
  p2.setMigrationRates(c(p1, p3), c(0, 0));
  p3.setMigrationRates(c(p1, p2), c(0, 0));

}
// Set up exponential growth in Europe and East Asia
// Where N(0) is the base subpopulation size and t = gen - 57080:
  // N(Europe) should be int(round(N(0) * e^(0.0038*t)))
// N(East Asia) should be int(round(N(0) * e^(0.0048*t)))
57080:58000 {
  t = sim.generation - 57080;
  p2_size = round(1032 * exp(0.0038 * t));
  p3_size = round(554 * exp(0.0048 * t));
  p2.setSubpopulationSize(asInteger(p2_size));
  p3.setSubpopulationSize(asInteger(p3_size));
}

58000 late () {
p1.outputVCFSample(sampleSize=1000, outputMultiallelics = F , filePath='/sharedata/huchunyan/生物多样性信息学研究组Private/SLIs/slim_data/model3_h05_r08_N10000/model3_h05_r08_s0_N10000.runmark.vcf');
sim.simulationFinished();
}
